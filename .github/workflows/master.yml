name: Master (Production) Build

on:
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          always-auth: false
          check-latest: false
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: npm run build

      - name: Publish @angularis/core
        run: npm publish
        working-directory: ./dist/core
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @angularis/model
        run: npm publish
        working-directory: ./dist/model
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @angularis/pipe
        run: npm publish
        working-directory: ./dist/pipe
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @angularis/service
        run: npm publish
        working-directory: ./dist/service
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @angularis/directive
        run: npm publish
        working-directory: ./dist/directive
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @angularis/component
        run: npm publish
        working-directory: ./dist/component
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
